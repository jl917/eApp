name: BETA Build
on:
  workflow_dispatch:
    inputs:
      target:
        description: "Target environment (web or app)"
        required: true
        default: "all"
        options:
          - web
          - app
          - all

jobs:
  ## app 빌드
  build-app:
    if: contains(github.event.inputs.target, 'app') || contains(github.event.inputs.target, 'all') && startsWith(github.ref, 'refs/heads/beta')
    name: Build and Upload Artifacts
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          # - platform: "macos-latest"
          #   args: ""
          # - platform: "ubuntu-latest"
          #   args: ""
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    outputs:
      success: ${{ job.status }} # 빌드 성공 여부를 output으로 저장
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo 'npm cache hit!'
      - if: steps.npm-cache.outputs.cache-hit != 'true'
        run: echo 'npm cache missed!'
      - run: npm install

      - name: Update version declarations
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx semantic-release --dry-run
      - name: Build App
        run: npm run build:beta

      - name: Move artifacts to outputs
        run: |
          mkdir outputs
      - name: Move macOS artifacts to outputs
        if: matrix.platform == 'macos-latest'
        run: |
          cp -r out/beta/make/* outputs/
      - name: Move Ubuntu artifacts to outputs
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cp -r out/beta/make/* outputs/
      - name: Move Windows artifacts to outputs
        if: matrix.platform == 'windows-latest'
        run: |
          cp -r out/beta/make/* outputs/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-artifacts-${{ strategy.job-index }}
          path: outputs/
          retention-days: 1

  ## 웹 빌드
  build-web:
    if: contains(github.event.inputs.target, 'web') || contains(github.event.inputs.target, 'all') && startsWith(github.ref, 'refs/heads/beta')
    name: Build web
    runs-on: ubuntu-latest
    outputs:
      success: ${{ job.status }} # 빌드 성공 여부를 output으로 저장
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo 'npm cache hit!'
      - if: steps.npm-cache.outputs.cache-hit != 'true'
        run: echo 'npm cache missed!'
      - run: npm install
      - name: Build Web
        run: npm run buildWeb:beta
      - name: Deploy Web
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./dist

  ## semantic-release
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: [build-web, build-app]
    if: ${{ needs.build-web.result == 'success' || needs.build-app.result == 'success' }} # 둘 중 하나라도 성공하면 실행
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo 'npm cache hit!'
      - if: steps.npm-cache.outputs.cache-hit != 'true'
        run: echo 'npm cache missed!'
      - run: npm install

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: electron-artifacts-*
          merge-multiple: true

      - name: Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
